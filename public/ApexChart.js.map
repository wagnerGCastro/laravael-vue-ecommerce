{"version":3,"sources":["webpack:///./resources/js/src/views/Charts/ApexCharts.vue?fdc1","webpack:///./resources/js/src/views/Charts/ApexCharts.vue?faec","webpack:///resources/js/src/views/Charts/ApexCharts.vue","webpack:///./resources/js/src/views/Charts/ApexCharts.vue","webpack:///./resources/js/src/components/core/charts/ApexChart.vue?071a","webpack:///./resources/js/src/components/core/charts/ApexChart.vue?5373","webpack:///resources/js/src/components/core/charts/ApexChart.vue","webpack:///./resources/js/src/components/core/charts/ApexChart.vue"],"names":["name","mounted","components","ApexChart","methods","generateData","i","series","count","y","Math","floor","random","yrange","max","min","z","push","baseval","data","charts","component","_vm","this","_h","$createElement","_c","_self","attrs","_l","item","index","key","scopedSlots","_u","fn","_v","_s","title","proxy","type","bodyData","props","setTimeout","chart","render","_this","isLive","setInterval","getNewSeries","lastDate","updateSeries","TICKINTERVAL","XAXISRANGE","newDate","length","x","element"],"mappings":"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","file":"ApexChart.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-container',{attrs:{\"fluid\":\"\"}},[_c('b-row',_vm._l((_vm.charts),function(item,index){return _c('b-col',{key:index,attrs:{\"lg\":\"6\"}},[_c('iq-card',{scopedSlots:_vm._u([{key:\"headerTitle\",fn:function(){return [_c('h4',[_vm._v(_vm._s(item.title))])]},proxy:true},{key:\"body\",fn:function(){return [_c('ApexChart',{attrs:{\"element\":item.type,\"chartOption\":item.bodyData}})]},proxy:true}],null,true)})],1)}),1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ApexCharts.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ApexCharts.vue?vue&type=script&lang=js&\"","<template>\n  <b-container fluid>\n    <b-row>\n      <b-col lg=\"6\" v-for=\"(item,index) in charts\" :key=\"index\">\n        <iq-card>\n          <template v-slot:headerTitle>\n            <h4>{{ item.title }}</h4>\n          </template>\n          <template v-slot:body>\n            <ApexChart :element=\"item.type\" :chartOption=\"item.bodyData\"/>\n          </template>\n        </iq-card>\n      </b-col>\n    </b-row>\n  </b-container>\n</template>\n<script>\nimport { core } from '../../config/pluginInit'\nimport ApexChart from '../../components/core/charts/ApexChart'\nexport default {\n  name: 'ApexCharts',\n  mounted () {\n    core.index()\n  },\n  components: {\n    ApexChart\n  },\n  methods: {\n    generateData (baseval, count, yrange) {\n      var i = 0\n      var series = []\n      while (i < count) {\n        var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min\n        var z = Math.floor(Math.random() * (75 - 15 + 1)) + 15\n\n        series.push([baseval, y, z])\n        baseval += 86400000\n        i++\n      }\n      return series\n    }\n  },\n  data () {\n    return {\n      charts: [\n        {\n          title: 'Line Chart',\n          type: 'line',\n          bodyData: {\n            chart: {\n              height: 350,\n              type: 'line',\n              zoom: {\n                enabled: false\n              }\n            },\n            series: [{\n              name: 'Desktops',\n              data: [10, 41, 35, 51, 49, 62, 69, 91, 148]\n            }],\n            dataLabels: {\n              enabled: false\n            },\n            stroke: {\n              curve: 'straight'\n            },\n            title: {\n              text: 'Product Trends by Month',\n              align: 'left'\n            },\n            grid: {\n              row: {\n                colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\n                opacity: 0.5\n              }\n            },\n            xaxis: {\n              categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep']\n            }\n          }\n        },\n        {\n          title: 'Column Chart',\n          type: 'column',\n          bodyData: {\n            chart: {\n              height: 350,\n              type: 'bar'\n            },\n            plotOptions: {\n              bar: {\n                horizontal: false,\n                columnWidth: '55%',\n                endingShape: 'rounded'\n              }\n            },\n            dataLabels: {\n              enabled: false\n            },\n            stroke: {\n              show: true,\n              width: 2,\n              colors: ['transparent']\n            },\n            colors: ['#0084ff', '#00ca00', '#ffc107'],\n            series: [{\n              name: 'Net Profit',\n              data: [44, 55, 57, 56, 61, 58]\n            }, {\n              name: 'Revenue',\n              data: [76, 85, 101, 98, 87, 105]\n            }, {\n              name: 'Free Cash Flow',\n              data: [35, 41, 36, 26, 45, 48]\n            }],\n            xaxis: {\n              categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul']\n            },\n            yaxis: {\n              title: {\n                text: '$ (thousands)'\n              }\n            },\n            fill: {\n              opacity: 1\n\n            },\n            tooltip: {\n              y: {\n                formatter: function (val) {\n                  return '$ ' + val + ' thousands'\n                }\n              }\n            }\n          }\n        },\n        {\n          title: 'Mixes Chart',\n          type: 'mixes',\n          bodyData: {\n            chart: {\n              height: 350,\n              type: 'line',\n              stacked: false\n            },\n            stroke: {\n              width: [0, 2, 5],\n              curve: 'smooth'\n            },\n            plotOptions: {\n              bar: {\n                columnWidth: '50%'\n              }\n            },\n            colors: ['#ffc107', '#00ca00', '#0084ff'],\n            series: [{\n              name: 'Facebook',\n              type: 'column',\n              data: [23, 11, 22, 27, 13, 22, 37, 21, 44, 22, 30]\n            }, {\n              name: 'Vine',\n              type: 'area',\n              data: [44, 55, 41, 67, 22, 43, 21, 41, 56, 27, 43]\n            }, {\n              name: 'Dribbble',\n              type: 'line',\n              data: [30, 25, 36, 30, 45, 35, 64, 52, 59, 36, 39]\n            }],\n            fill: {\n              opacity: [0.85, 0.25, 1],\n              gradient: {\n                inverseColors: false,\n                shade: 'light',\n                type: 'vertical',\n                opacityFrom: 0.85,\n                opacityTo: 0.55,\n                stops: [0, 100, 100, 100]\n              }\n            },\n            labels: ['01/01/2003', '02/01/2003', '03/01/2003', '04/01/2003', '05/01/2003', '06/01/2003', '07/01/2003', '08/01/2003', '09/01/2003', '10/01/2003', '11/01/2003'],\n            markers: {\n              size: 0\n            },\n            xaxis: {\n              type: 'datetime'\n            },\n            yaxis: {\n              min: 0\n            },\n            tooltip: {\n              shared: true,\n              intersect: false,\n              y: {\n                formatter: function (y) {\n                  if (typeof y !== 'undefined') {\n                    return y.toFixed(0) + ' views'\n                  }\n                  return y\n                }\n              }\n            },\n            legend: {\n              labels: {\n                useSeriesColors: true\n              },\n              markers: {\n                customHTML: [\n                  function () {\n                    return ''\n                  }, function () {\n                    return ''\n                  }, function () {\n                    return ''\n                  }\n                ]\n              }\n            }\n          }\n        },\n        {\n          title: 'Bubble Charts',\n          type: 'bubble',\n          bodyData: {\n            chart: {\n              height: 350,\n              type: 'bubble'\n            },\n            dataLabels: {\n              enabled: false\n            },\n            series: [{\n              name: 'Product1',\n              data: this.generateData(new Date('11 Feb 2017 GMT').getTime(), 20, {\n                min: 10,\n                max: 40\n              })\n            },\n            {\n              name: 'Product2',\n              data: this.generateData(new Date('11 Feb 2017 GMT').getTime(), 20, {\n                min: 10,\n                max: 40\n              })\n            },\n            {\n              name: 'Product3',\n              data: this.generateData(new Date('11 Feb 2017 GMT').getTime(), 20, {\n                min: 10,\n                max: 40\n              })\n            }\n            ],\n            fill: {\n              type: 'gradient'\n            },\n            colors: ['#0084ff', '#00ca00', '#e64141'],\n            title: {\n              text: '3D Bubble Chart'\n            },\n            xaxis: {\n              tickAmount: 12,\n              type: 'datetime',\n\n              labels: {\n                rotate: 0\n              }\n            },\n            yaxis: {\n              max: 40\n            },\n            theme: {\n              palette: 'palette2'\n            }\n          }\n        },\n        {\n          title: 'Pie Charts',\n          type: 'pie',\n          bodyData: {\n            chart: {\n              width: 380,\n              type: 'pie'\n            },\n            labels: ['Team A', 'Team B', 'Team C', 'Team D', 'Team E'],\n            series: [44, 55, 13, 43, 22],\n            colors: ['#0084ff', '#00ca00', '#e64141', '#ffd400', '#00d0ff'],\n            responsive: [{\n              breakpoint: 480,\n              options: {\n                chart: {\n                  width: 200\n                },\n                legend: {\n                  position: 'bottom'\n                }\n              }\n            }]\n          }\n        },\n        {\n          title: 'Line Area Chart',\n          type: 'line-area',\n          bodyData: {\n            chart: {\n              height: 350,\n              type: 'area'\n            },\n            dataLabels: {\n              enabled: false\n            },\n            stroke: {\n              curve: 'smooth'\n            },\n            colors: ['#0084ff', '#00ca00'],\n            series: [{\n              name: 'series1',\n              data: [31, 40, 28, 51, 42, 109, 100]\n            }, {\n              name: 'series2',\n              data: [11, 32, 45, 32, 34, 52, 41]\n            }],\n\n            xaxis: {\n              type: 'datetime',\n              categories: ['2018-09-19T00:00:00', '2018-09-19T01:30:00', '2018-09-19T02:30:00', '2018-09-19T03:30:00', '2018-09-19T04:30:00', '2018-09-19T05:30:00', '2018-09-19T06:30:00']\n            },\n            tooltip: {\n              x: {\n                format: 'dd/MM/yy HH:mm'\n              }\n            }\n          }\n        },\n        {\n          title: 'Bar Chart',\n          type: 'bar',\n          bodyData: {\n            chart: {\n              height: 350,\n              type: 'bar'\n            },\n            plotOptions: {\n              bar: {\n                horizontal: true\n              }\n            },\n            dataLabels: {\n              enabled: false\n            },\n            series: [{\n              data: [470, 540, 580, 690, 1100, 1200, 1380]\n            }],\n            xaxis: {\n              categories: ['Netherlands', 'Italy', 'France', 'Japan', 'United States', 'China', 'Germany']\n            }\n          }\n        },\n        {\n          title: 'Candlestick Charts',\n          type: 'candlestick',\n          bodyData: {\n            chart: {\n              height: 350,\n              type: 'candlestick'\n            },\n            series: [{\n              data: [{\n                x: new Date(1538778600000),\n                y: [6629.81, 6650.5, 6623.04, 6633.33]\n              },\n              {\n                x: new Date(1538780400000),\n                y: [6632.01, 6643.59, 6620, 6630.11]\n              },\n              {\n                x: new Date(1538782200000),\n                y: [6630.71, 6648.95, 6623.34, 6635.65]\n              },\n              {\n                x: new Date(1538784000000),\n                y: [6635.65, 6651, 6629.67, 6638.24]\n              },\n              {\n                x: new Date(1538785800000),\n                y: [6638.24, 6640, 6620, 6624.47]\n              },\n              {\n                x: new Date(1538787600000),\n                y: [6624.53, 6636.03, 6621.68, 6624.31]\n              },\n              {\n                x: new Date(1538789400000),\n                y: [6624.61, 6632.2, 6617, 6626.02]\n              },\n              {\n                x: new Date(1538791200000),\n                y: [6627, 6627.62, 6584.22, 6603.02]\n              },\n              {\n                x: new Date(1538793000000),\n                y: [6605, 6608.03, 6598.95, 6604.01]\n              },\n              {\n                x: new Date(1538794800000),\n                y: [6604.5, 6614.4, 6602.26, 6608.02]\n              },\n              {\n                x: new Date(1538796600000),\n                y: [6608.02, 6610.68, 6601.99, 6608.91]\n              },\n              {\n                x: new Date(1538798400000),\n                y: [6608.91, 6618.99, 6608.01, 6612]\n              },\n              {\n                x: new Date(1538800200000),\n                y: [6612, 6615.13, 6605.09, 6612]\n              },\n              {\n                x: new Date(1538802000000),\n                y: [6612, 6624.12, 6608.43, 6622.95]\n              },\n              {\n                x: new Date(1538803800000),\n                y: [6623.91, 6623.91, 6615, 6615.67]\n              },\n              {\n                x: new Date(1538805600000),\n                y: [6618.69, 6618.74, 6610, 6610.4]\n              },\n              {\n                x: new Date(1538807400000),\n                y: [6611, 6622.78, 6610.4, 6614.9]\n              },\n              {\n                x: new Date(1538809200000),\n                y: [6614.9, 6626.2, 6613.33, 6623.45]\n              },\n              {\n                x: new Date(1538811000000),\n                y: [6623.48, 6627, 6618.38, 6620.35]\n              },\n              {\n                x: new Date(1538812800000),\n                y: [6619.43, 6620.35, 6610.05, 6615.53]\n              },\n              {\n                x: new Date(1538814600000),\n                y: [6615.53, 6617.93, 6610, 6615.19]\n              },\n              {\n                x: new Date(1538816400000),\n                y: [6615.19, 6621.6, 6608.2, 6620]\n              },\n              {\n                x: new Date(1538818200000),\n                y: [6619.54, 6625.17, 6614.15, 6620]\n              },\n              {\n                x: new Date(1538820000000),\n                y: [6620.33, 6634.15, 6617.24, 6624.61]\n              },\n              {\n                x: new Date(1538821800000),\n                y: [6625.95, 6626, 6611.66, 6617.58]\n              },\n              {\n                x: new Date(1538823600000),\n                y: [6619, 6625.97, 6595.27, 6598.86]\n              },\n              {\n                x: new Date(1538825400000),\n                y: [6598.86, 6598.88, 6570, 6587.16]\n              },\n              {\n                x: new Date(1538827200000),\n                y: [6588.86, 6600, 6580, 6593.4]\n              },\n              {\n                x: new Date(1538829000000),\n                y: [6593.99, 6598.89, 6585, 6587.81]\n              },\n              {\n                x: new Date(1538830800000),\n                y: [6587.81, 6592.73, 6567.14, 6578]\n              },\n              {\n                x: new Date(1538832600000),\n                y: [6578.35, 6581.72, 6567.39, 6579]\n              },\n              {\n                x: new Date(1538834400000),\n                y: [6579.38, 6580.92, 6566.77, 6575.96]\n              },\n              {\n                x: new Date(1538836200000),\n                y: [6575.96, 6589, 6571.77, 6588.92]\n              },\n              {\n                x: new Date(1538838000000),\n                y: [6588.92, 6594, 6577.55, 6589.22]\n              },\n              {\n                x: new Date(1538839800000),\n                y: [6589.3, 6598.89, 6589.1, 6596.08]\n              },\n              {\n                x: new Date(1538841600000),\n                y: [6597.5, 6600, 6588.39, 6596.25]\n              },\n              {\n                x: new Date(1538843400000),\n                y: [6598.03, 6600, 6588.73, 6595.97]\n              },\n              {\n                x: new Date(1538845200000),\n                y: [6595.97, 6602.01, 6588.17, 6602]\n              },\n              {\n                x: new Date(1538847000000),\n                y: [6602, 6607, 6596.51, 6599.95]\n              },\n              {\n                x: new Date(1538848800000),\n                y: [6600.63, 6601.21, 6590.39, 6591.02]\n              },\n              {\n                x: new Date(1538850600000),\n                y: [6591.02, 6603.08, 6591, 6591]\n              },\n              {\n                x: new Date(1538852400000),\n                y: [6591, 6601.32, 6585, 6592]\n              },\n              {\n                x: new Date(1538854200000),\n                y: [6593.13, 6596.01, 6590, 6593.34]\n              },\n              {\n                x: new Date(1538856000000),\n                y: [6593.34, 6604.76, 6582.63, 6593.86]\n              },\n              {\n                x: new Date(1538857800000),\n                y: [6593.86, 6604.28, 6586.57, 6600.01]\n              },\n              {\n                x: new Date(1538859600000),\n                y: [6601.81, 6603.21, 6592.78, 6596.25]\n              },\n              {\n                x: new Date(1538861400000),\n                y: [6596.25, 6604.2, 6590, 6602.99]\n              },\n              {\n                x: new Date(1538863200000),\n                y: [6602.99, 6606, 6584.99, 6587.81]\n              },\n              {\n                x: new Date(1538865000000),\n                y: [6587.81, 6595, 6583.27, 6591.96]\n              },\n              {\n                x: new Date(1538866800000),\n                y: [6591.97, 6596.07, 6585, 6588.39]\n              },\n              {\n                x: new Date(1538868600000),\n                y: [6587.6, 6598.21, 6587.6, 6594.27]\n              },\n              {\n                x: new Date(1538870400000),\n                y: [6596.44, 6601, 6590, 6596.55]\n              },\n              {\n                x: new Date(1538872200000),\n                y: [6598.91, 6605, 6596.61, 6600.02]\n              },\n              {\n                x: new Date(1538874000000),\n                y: [6600.55, 6605, 6589.14, 6593.01]\n              },\n              {\n                x: new Date(1538875800000),\n                y: [6593.15, 6605, 6592, 6603.06]\n              }\n              ]\n            }],\n            title: {\n              text: 'CandleStick Chart',\n              align: 'left'\n            },\n            xaxis: {\n              type: 'datetime'\n            },\n            yaxis: {\n              tooltip: {\n                enabled: true\n              }\n            }\n          }\n        },\n        {\n          title: 'Scatter Charts',\n          type: 'scatter',\n          bodyData: {\n            chart: {\n              height: 350,\n              type: 'scatter',\n              zoom: {\n                enabled: true,\n                type: 'xy'\n              }\n            },\n\n            series: [{\n              name: 'SAMPLE A',\n              data: [\n                [16.4, 5.4], [21.7, 2], [10.9, 0], [10.9, 8.2], [16.4, 0], [16.4, 1.8], [13.6, 0.3], [13.6, 0], [29.9, 0], [27.1, 2.3], [16.4, 0], [13.6, 3.7], [10.9, 5.2], [16.4, 6.5], [10.9, 0], [24.5, 7.1], [10.9, 0], [8.1, 4.7]]\n            }, {\n              name: 'SAMPLE B',\n              data: [\n                [36.4, 13.4], [1.7, 11], [1.9, 9], [1.9, 13.2], [1.4, 7], [6.4, 8.8], [3.6, 4.3], [1.6, 10], [9.9, 2], [7.1, 15], [1.4, 0], [3.6, 13.7], [1.9, 15.2], [6.4, 16.5], [0.9, 10], [4.5, 17.1], [10.9, 10], [0.1, 14.7]]\n            }, {\n              name: 'SAMPLE C',\n              data: [\n                [21.7, 3], [23.6, 3.5], [28, 4], [27.1, 0.3], [16.4, 4], [13.6, 0], [19, 5], [22.4, 3], [24.5, 3], [32.6, 3], [27.1, 4], [29.6, 6], [31.6, 8], [21.6, 5], [20.9, 4], [22.4, 0], [32.6, 10.3], [29.7, 20.8]]\n            }],\n            xaxis: {\n              tickAmount: 5,\n              labels: {\n                formatter: function (val) {\n                  return parseFloat(val).toFixed(1)\n                }\n              }\n            },\n            yaxis: {\n              tickAmount: 5\n            }\n          }\n        },\n        {\n          title: 'Radial Bar Charts',\n          type: 'radial',\n          bodyData: {\n            chart: {\n              height: 350,\n              type: 'radialBar'\n            },\n            plotOptions: {\n              radialBar: {\n                dataLabels: {\n                  name: {\n                    fontSize: '22px'\n                  },\n                  value: {\n                    fontSize: '16px'\n                  },\n                  total: {\n                    show: true,\n                    label: 'Total',\n                    formatter: function (w) {\n                      // By default this function returns the average of all series. The below is just an example to show the use of custom formatter function\n                      return 249\n                    }\n                  }\n                }\n              }\n            },\n            series: [44, 55, 67, 83],\n            labels: ['Apples', 'Oranges', 'Bananas', 'Berries'],\n            colors: ['#0084ff', '#00ca00', '#e64141', '#ffd400']\n          }\n        }\n      ]\n    }\n  }\n}\n</script>\n","import { render, staticRenderFns } from \"./ApexCharts.vue?vue&type=template&id=4d6d0e64&\"\nimport script from \"./ApexCharts.vue?vue&type=script&lang=js&\"\nexport * from \"./ApexCharts.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":_vm.element}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ApexChart.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ApexChart.vue?vue&type=script&lang=js&\"","<template>\n  <div :id=\"element\"></div>\n</template>\n<script>\nimport ApexCharts from 'apexcharts'\nexport default {\n  name: 'ApexChart',\n  props: ['element', 'chartOption', 'isLive'],\n  mounted () {\n    const _this = this\n    const selector = '#' + _this.element\n    const chart = new ApexCharts(document.querySelector(selector), _this.chartOption)\n    setTimeout(function () {\n      chart.render()\n      if (_this.isLive) {\n        setInterval(function () {\n          _this.getNewSeries(_this.lastDate, {\n            min: 10,\n            max: 90\n          })\n          chart.updateSeries([{\n            data: _this.data\n          }])\n        }, 1000)\n      }\n    }, 500)\n  },\n  data () {\n    return {\n      lastDate: 0,\n      data: [],\n      TICKINTERVAL: 86400000,\n      XAXISRANGE: 777600000\n    }\n  },\n  methods: {\n    getNewSeries (baseval, yrange) {\n      const newDate = baseval + this.TICKINTERVAL\n      this.lastDate = newDate\n      for (var i = 0; i < this.data.length - 10; i++) {\n        this.data[i].x = newDate - this.XAXISRANGE - this.TICKINTERVAL\n        this.data[i].y = 0\n      }\n      this.data.push({\n        x: newDate,\n        y: Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min\n      })\n    }\n  }\n}\n</script>\n","import { render, staticRenderFns } from \"./ApexChart.vue?vue&type=template&id=3893f64f&\"\nimport script from \"./ApexChart.vue?vue&type=script&lang=js&\"\nexport * from \"./ApexChart.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}