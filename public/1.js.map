{"version":3,"sources":["webpack:///./resources/js/src/components/core/charts/AmChart.vue?f7b0","webpack:///resources/js/src/components/core/charts/AmChart.vue","webpack:///./resources/js/src/components/core/charts/AmChart.vue?4dc9","webpack:///./resources/js/src/components/core/charts/AmChart.vue"],"names":["name","props","element","type","option","height","computed","mounted","this","chart","line","column","mixesColumn","stacked","barLine","dataBased","lineZoomH","lineZoomV","radar","polarScatter","polar","pie","lineBar","map","linierChart","htMenu1","htMenu2","htMenu3","methods","colors","list","push","data","categoryAxis","dataFields","category","xAxis","renderer","grid","template","location","minGridDistance","labels","adapter","add","dy","target","dataItem","index","yAxes","series","valueY","yAxis","categoryX","columns","tooltipText","fillOpacity","columnTemplate","strokeWidth","strokeOpacity","exporting","menu","columnSeries","propertyFields","stroke","strokeDasharray","tooltip","label","textAlign","lineSeries","bullet","fill","circle","radius","numberFormatter","numberFormat","valueAxis","title","text","fontWeight","clustered","series2","width","cursor","lineX","disabled","lineY","inside","min","createSeries","field","_this","sequencedInterpolation","labelBullet","locationY","legend","inversed","opposite","categoryY","valueX","circleBullet","behavior","dateFormatter","inputDateFormat","dateX","minBulletDistance","background","cornerRadius","pointerOrientation","minWidth","minHeight","textValign","properties","scale","dateAxis","snapToSeries","scrollbarY","parent","leftAxesContainer","toBack","scrollbarX","bottomAxesContainer","start","keepSelection","padding","marginLeft","axisFills","getIndex","maxLabelPosition","verticalCenter","horizontalCenter","paddingBottom","paddingRight","series1","bullets","sequencedInterpolationDelay","series3","gridType","range","endCategory","axisFill","range2","range3","locations","value","darkMode","Math","round","random","chartdata","rotation","dx","maxRight","ticks","strokeDashArray","create","e","AD","country","continent_code","continent","maps","AE","AF","AG","AI","AL","AM","AO","AQ","AR","AS","AT","AU","AW","AX","AZ","BA","BB","BD","BE","BF","BG","BH","BI","BJ","BL","BM","BN","BO","BQ","BR","BS","BT","BV","BW","BY","BZ","CA","CC","CD","CF","CG","CH","CI","CK","CL","CM","CN","CO","CR","CU","CV","CW","CX","CY","CZ","DE","DJ","DK","DM","DO","DZ","EC","EE","EG","EH","ER","ES","ET","FI","FJ","FK","FM","FO","FR","GA","GB","GD","GE","GF","GG","GH","GI","GL","GM","GN","GP","GQ","GR","GS","GT","GU","GW","GY","HK","HM","HN","HR","HT","HU","ID","IE","IL","IM","IN","IO","IQ","IR","IS","IT","JE","JM","JO","JP","KE","KG","KH","KI","KM","KN","KP","KR","KT","KW","KY","KZ","LA","LB","LC","LI","LK","LR","LS","LT","LU","LV","LY","MA","MC","MD","ME","MF","MG","MH","MK","ML","MM","MN","MO","MP","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NU","NZ","OM","PA","PE","PF","PG","PH","PK","PL","PM","PN","PR","PS","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SD","SE","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","SS","ST","SV","SX","SY","SZ","TC","TD","TF","TG","TH","TJ","TK","TL","TM","TN","TO","TR","TT","TV","TW","TZ","UA","UG","UM","US","UY","UZ","VA","VC","VE","VG","VI","VN","VU","WF","WS","YE","YT","ZA","ZM","ZW","XK","t","AN","EU","OC","a","projection","n","useGeodata","geodata","o","nonScalingStroke","r","hide","geodataSource","events","on","show","i","zoomToMapObject","dataContext","isHover","url","load","hasOwnProperty","s","l","length","c","id","color","zoomControl","d","goHome","close","open","openValueY","closeBullet","date","price","xAxes","tensionX","hiddenState","opacity","steps","zoomOutButton","dateFormats","setKey","visible","x","cursorTooltipEnabled","axisRange","align","gridContainer","zIndex","axisRange2","cornerRadiusTopLeft","cornerRadiusTopRight","zoomToDates","Date","updateTooltip","showTooltipAtPosition","validate","middleLine","y2","pixelHeight","y","component","_h","$createElement","_self","_c","style","attrs"],"mappings":"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","file":"1.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{style:('height: '+_vm.height+'px;'),attrs:{\"id\":_vm.element}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div :id=\"element\" :style=\"'height: '+height+'px;'\"></div>\n</template>\n<script>\nimport * as am4core from '@amcharts/amcharts4/core'\nimport * as am4charts from '@amcharts/amcharts4/charts'\nimport * as am4maps from '@amcharts/amcharts4/maps'\n// eslint-disable-next-line camelcase\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated'\nimport am4geodataWorldLow from '@amcharts/amcharts4-geodata/worldLow'\n// eslint-disable-next-line camelcase\n// import am4themes_dark from '@amcharts/amcharts4/themes/amchartsdark'\nimport { mapGetters } from 'vuex'\n\nam4core.useTheme(am4themes_animated)\nexport default {\n  name: 'AmChart',\n  props: {\n    element: { type: String, default: 'am-chart' },\n    type: { type: String, default: 'bar' },\n    option: { type: Object, default: () => {} },\n    height: { type: Number, default: 500 }\n  },\n  computed: {\n    ...mapGetters({\n      darkMode: 'Setting/darkModeState'\n    })\n  },\n  mounted () {\n    let chart\n    switch (this.type) {\n      case 'line':\n        chart = am4core.create(this.element, am4charts.XYChart)\n        this.line(chart)\n        break\n      case 'column':\n        chart = am4core.create(this.element, am4charts.XYChart)\n        this.column(chart)\n        break\n      case 'mixes-column':\n        chart = am4core.create(this.element, am4charts.XYChart)\n        this.mixesColumn(chart)\n        break\n      case 'stacked':\n        chart = am4core.create(this.element, am4charts.XYChart)\n        this.stacked(chart)\n        break\n      case 'bar-line':\n        chart = am4core.create(this.element, am4charts.XYChart)\n        this.barLine(chart)\n        break\n      case 'data-based':\n        chart = am4core.create(this.element, am4charts.XYChart)\n        this.dataBased(chart)\n        break\n      case 'line-zoom-h':\n        chart = am4core.create(this.element, am4charts.XYChart)\n        this.lineZoomH(chart)\n        break\n      case 'line-zoom-v':\n        chart = am4core.create(this.element, am4charts.XYChart)\n        this.lineZoomV(chart)\n        break\n      case 'radar':\n        chart = am4core.create(this.element, am4charts.RadarChart)\n        this.radar(chart)\n        break\n      case 'polar-scatter':\n        chart = am4core.create(this.element, am4charts.RadarChart)\n        this.polarScatter(chart)\n        break\n      case 'polar':\n        chart = am4core.create(this.element, am4charts.RadarChart)\n        this.polar(chart)\n        break\n      case 'pie':\n        chart = am4core.create(this.element, am4charts.PieChart3D)\n        this.pie(chart)\n        break\n      case 'line-bar':\n        chart = am4core.create(this.element, am4charts.XYChart)\n        this.lineBar(chart)\n        break\n      case 'dashboard-map':\n        this.map()\n        break\n      case 'dashboard2':\n        chart = am4core.create(this.element, am4charts.XYChart)\n        this.linierChart(chart)\n        break\n      case 'ht-menu1':\n        chart = am4core.create(this.element, am4charts.XYChart)\n        this.htMenu1(chart)\n        break\n      case 'ht-menu2':\n        chart = am4core.create(this.element, am4charts.XYChart)\n        this.htMenu2(chart)\n        break\n      case 'ht-menu3':\n        chart = am4core.create(this.element, am4charts.XYChart)\n        this.htMenu3(chart)\n        break\n      default:\n        break\n    }\n  },\n  methods: {\n    line (chart) {\n      chart.colors.list = []\n      for (let j = 0; j < this.option.colors.length; j++) {\n        chart.colors.list.push(am4core.color(this.option.colors[j]))\n      }\n      chart.data = this.option.data\n      const categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis())\n      categoryAxis.dataFields.category = this.option.xAxis[0]\n      categoryAxis.renderer.grid.template.location = 0\n      categoryAxis.renderer.minGridDistance = 30\n\n      categoryAxis.renderer.labels.template.adapter.add('dy', function (dy, target) {\n        // eslint-disable-next-line no-self-compare\n        if (target.dataItem && target.dataItem.index & 2 === 2) {\n          return dy + 25\n        }\n        return dy\n      })\n      chart.yAxes.push(new am4charts.ValueAxis())\n\n      // Create series\n      const series = chart.series.push(new am4charts.ColumnSeries())\n      series.dataFields.valueY = this.option.yAxis[0]\n      series.dataFields.categoryX = this.option.xAxis[0]\n      series.name = this.option.labels[0]\n      series.columns.template.tooltipText = '{categoryX}: [bold]{valueY}[/]'\n      series.columns.template.fillOpacity = 0.8\n\n      const columnTemplate = series.columns.template\n      columnTemplate.strokeWidth = 2\n      columnTemplate.strokeOpacity = 1\n    },\n    column (chart) {\n      chart.exporting.menu = new am4core.ExportMenu()\n      /* Create axes */\n\n      const categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis())\n      categoryAxis.dataFields.category = 'year'\n      categoryAxis.renderer.minGridDistance = 30\n\n      /* Create value axis */\n      chart.yAxes.push(new am4charts.ValueAxis())\n\n      /* Create series */\n      const columnSeries = chart.series.push(new am4charts.ColumnSeries())\n      columnSeries.name = 'Income'\n      columnSeries.dataFields.valueY = 'income'\n      columnSeries.dataFields.categoryX = 'year'\n\n      columnSeries.columns.template.tooltipText = '[#fff font-size: 15px]{name} in {categoryX}:\\n[/][#fff font-size: 20px]{valueY}[/] [#fff]{additional}[/]'\n      columnSeries.columns.template.propertyFields.fillOpacity = 'fillOpacity'\n      columnSeries.columns.template.propertyFields.stroke = 'stroke'\n      columnSeries.columns.template.propertyFields.strokeWidth = 'strokeWidth'\n      columnSeries.columns.template.propertyFields.strokeDasharray = 'columnDash'\n      columnSeries.tooltip.label.textAlign = 'middle'\n\n      const lineSeries = chart.series.push(new am4charts.LineSeries())\n      lineSeries.name = 'Expenses'\n      lineSeries.dataFields.valueY = 'expenses'\n      lineSeries.dataFields.categoryX = 'year'\n\n      lineSeries.stroke = am4core.color(this.option.color)\n      lineSeries.strokeWidth = 3\n      lineSeries.propertyFields.strokeDasharray = 'lineDash'\n      lineSeries.tooltip.label.textAlign = 'middle'\n\n      const bullet = lineSeries.bullets.push(new am4charts.Bullet())\n      bullet.fill = am4core.color(this.option.fill) // tooltips grab fill from parent by default\n      bullet.tooltipText = '[#fff font-size: 15px]{name} in {categoryX}:\\n[/][#fff font-size: 20px]{valueY}[/] [#fff]{additional}[/]'\n      const circle = bullet.createChild(am4core.Circle)\n      circle.radius = 4\n      circle.fill = am4core.color('#fff')\n      circle.strokeWidth = 3\n\n      chart.data = this.option.data\n    },\n    mixesColumn (chart) {\n      chart.colors.list = []\n      for (let j = 0; j < this.option.colors.length; j++) {\n        chart.colors.list.push(am4core.color(this.option.colors[j]))\n      }\n      chart.numberFormatter.numberFormat = \"#.#'%'\"\n      chart.data = this.option.data\n      // Create axes\n\n      const categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis())\n      categoryAxis.dataFields.category = this.option.xAxis[0]\n      categoryAxis.renderer.grid.template.location = 0\n      categoryAxis.renderer.minGridDistance = 30\n      const valueAxis = chart.yAxes.push(new am4charts.ValueAxis())\n      valueAxis.title.text = this.option.title\n      valueAxis.title.fontWeight = 800\n\n      // Create series\n\n      const series = chart.series.push(new am4charts.ColumnSeries())\n      series.dataFields.valueY = this.option.yAxis[0]\n      series.dataFields.categoryX = this.option.xAxis[0]\n      series.clustered = false\n      series.tooltipText = this.option.labels[0]\n\n      const series2 = chart.series.push(new am4charts.ColumnSeries())\n      series2.dataFields.valueY = this.option.yAxis[1]\n      series2.dataFields.categoryX = this.option.xAxis[0]\n      series2.clustered = false\n      series2.columns.template.width = am4core.percent(50)\n      series2.tooltipText = this.option.labels[1]\n\n      chart.cursor = new am4charts.XYCursor()\n      chart.cursor.lineX.disabled = true\n      chart.cursor.lineY.disabled = true\n    },\n    stacked (chart) {\n      chart.colors.list = []\n      for (let j = 0; j < this.option.colors.length; j++) {\n        chart.colors.list.push(am4core.color(this.option.colors[j]))\n      }\n      chart.data = this.option.data\n\n      const categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis())\n      categoryAxis.dataFields.category = 'year'\n      categoryAxis.renderer.grid.template.location = 0\n      const valueAxis = chart.yAxes.push(new am4charts.ValueAxis())\n      valueAxis.renderer.inside = true\n      valueAxis.renderer.labels.template.disabled = true\n      valueAxis.min = 0\n\n      // Create series\n      const _this = this\n      // eslint-disable-next-line no-inner-declarations\n      function createSeries (field, name) {\n        // Set up series\n        const series = chart.series.push(new am4charts.ColumnSeries())\n        series.name = name\n        series.dataFields.valueY = field\n        series.dataFields.categoryX = _this.option.xAxis[0]\n        series.sequencedInterpolation = true\n\n        // Make it stacked\n        series.stacked = true\n\n        // Configure columns\n        series.columns.template.width = am4core.percent(60)\n        series.columns.template.tooltipText = '[bold]{name}[/]\\n[font-size:14px]{categoryX}: {valueY}'\n\n        // Add label\n        const labelBullet = series.bullets.push(new am4charts.LabelBullet())\n        labelBullet.label.text = '{valueY}'\n        labelBullet.locationY = 0.5\n\n        return series\n      }\n      for (let j = 0; j < this.option.yAxis.length; j++) {\n        createSeries(this.option.yAxis[j], this.option.yAxis[j])\n      }\n      // Legend\n      chart.legend = new am4charts.Legend()\n    },\n    barLine (chart) {\n      chart.colors.list = []\n      for (let j = 0; j < this.option.colors.length; j++) {\n        chart.colors.list.push(am4core.color(this.option.colors[j]))\n      }\n      chart.data = this.option.data\n      // create category axis for years\n\n      const categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis())\n      categoryAxis.dataFields.category = this.option.yAxis[0]\n      categoryAxis.renderer.inversed = true\n      categoryAxis.renderer.grid.template.location = 0\n\n      // create value axis for income and expenses\n\n      const valueAxis = chart.xAxes.push(new am4charts.ValueAxis())\n      valueAxis.renderer.opposite = true\n\n      // create columns\n\n      const series = chart.series.push(new am4charts.ColumnSeries())\n      series.dataFields.categoryY = this.option.yAxis[0]\n      series.dataFields.valueX = this.option.xAxis[0]\n      series.name = this.option.labels[0]\n      series.columns.template.fillOpacity = 0.5\n      series.columns.template.strokeOpacity = 0\n      series.tooltipText = this.option.labels[0] + ' in {categoryY}: {valueX.value}'\n\n      // create line\n\n      const lineSeries = chart.series.push(new am4charts.LineSeries())\n      lineSeries.dataFields.categoryY = this.option.yAxis[0]\n      lineSeries.dataFields.valueX = this.option.xAxis[1]\n      lineSeries.name = this.option.labels[1]\n      lineSeries.strokeWidth = 3\n      lineSeries.tooltipText = this.option.labels[1] + ' in {categoryY}: {valueX.value}'\n\n      // add bullets\n      const circleBullet = lineSeries.bullets.push(new am4charts.CircleBullet())\n      circleBullet.circle.fill = am4core.color('#fff')\n      circleBullet.circle.strokeWidth = 2\n\n      // add chart cursor\n      chart.cursor = new am4charts.XYCursor()\n      chart.cursor.behavior = 'zoomY'\n\n      // add legend\n      chart.legend = new am4charts.Legend()\n    },\n    dataBased (chart) {\n      chart.colors.list = []\n      for (let j = 0; j < this.option.colors.length; j++) {\n        chart.colors.list.push(am4core.color(this.option.colors[j]))\n      }\n      chart.data = this.option.data\n      // Set input format for the dates\n      chart.dateFormatter.inputDateFormat = 'yyyy-MM-dd'\n\n      // Create axes\n      const dateAxis = chart.xAxes.push(new am4charts.DateAxis())\n\n      chart.yAxes.push(new am4charts.ValueAxis())\n\n      // Create series\n\n      const series = chart.series.push(new am4charts.LineSeries())\n      series.dataFields.valueY = this.option.yAxis[0]\n      series.dataFields.dateX = this.option.xAxis[0]\n      series.tooltipText = '{value}'\n      series.strokeWidth = 2\n      series.minBulletDistance = 15\n\n      // Drop-shaped tooltips\n      series.tooltip.background.cornerRadius = 20\n      series.tooltip.background.strokeOpacity = 0\n      series.tooltip.pointerOrientation = 'vertical'\n      series.tooltip.label.minWidth = 40\n      series.tooltip.label.minHeight = 40\n      series.tooltip.label.textAlign = 'middle'\n      series.tooltip.label.textValign = 'middle'\n\n      // Make bullets grow on hover\n\n      const bullet = series.bullets.push(new am4charts.CircleBullet())\n      bullet.circle.strokeWidth = 2\n      bullet.circle.radius = 4\n      bullet.circle.fill = am4core.color('#fff')\n\n      const bullethover = bullet.states.create('hover')\n      bullethover.properties.scale = 1.3\n\n      // Make a panning cursor\n      chart.cursor = new am4charts.XYCursor()\n      chart.cursor.behavior = 'panXY'\n      chart.cursor.xAxis = dateAxis\n      chart.cursor.snapToSeries = series\n\n      // Create vertical scrollbar and place it before the value axis\n      chart.scrollbarY = new am4core.Scrollbar()\n      chart.scrollbarY.parent = chart.leftAxesContainer\n      chart.scrollbarY.toBack()\n\n      // Create a horizontal scrollbar with previe and place it underneath the date axis\n      chart.scrollbarX = new am4charts.XYChartScrollbar()\n      chart.scrollbarX.series.push(series)\n      chart.scrollbarX.parent = chart.bottomAxesContainer\n\n      dateAxis.start = 0.79\n      dateAxis.keepSelection = true\n    },\n    lineZoomH (chart) {\n      chart.colors.list = []\n      for (let j = 0; j < this.option.colors.length; j++) {\n        chart.colors.list.push(am4core.color(this.option.colors[j]))\n      }\n\n      // Add data\n      chart.data = this.option.data\n\n      // Create axes\n      const dateAxis = chart.xAxes.push(new am4charts.DateAxis())\n      dateAxis.renderer.minGridDistance = 50\n      chart.yAxes.push(new am4charts.ValueAxis())\n\n      // Create series\n      const series = chart.series.push(new am4charts.LineSeries())\n      series.dataFields.valueY = this.option.yAxis\n      series.dataFields.dateX = this.option.xAxis\n      series.strokeWidth = 2\n      series.minBulletDistance = 10\n      series.tooltipText = '{valueY}'\n      series.tooltip.pointerOrientation = 'vertical'\n      series.tooltip.background.cornerRadius = 20\n      series.tooltip.background.fillOpacity = 0.5\n      series.tooltip.label.padding(12, 12, 12, 12)\n\n      // Add scrollbar\n      chart.scrollbarX = new am4charts.XYChartScrollbar()\n      chart.scrollbarX.series.push(series)\n\n      // Add cursor\n      chart.cursor = new am4charts.XYCursor()\n      chart.cursor.xAxis = dateAxis\n      chart.cursor.snapToSeries = series\n    },\n    lineZoomV (chart) {\n      chart.colors.list = []\n      for (let j = 0; j < this.option.colors.length; j++) {\n        chart.colors.list.push(am4core.color(this.option.colors[j]))\n      }\n\n      // Add data\n      chart.data = this.option.data\n\n      // Create axes\n      const dateAxis = chart.xAxes.push(new am4charts.DateAxis())\n      dateAxis.renderer.grid.template.location = 0\n      dateAxis.renderer.minGridDistance = 50\n\n      chart.yAxes.push(new am4charts.ValueAxis())\n\n      // Create series\n      const series = chart.series.push(new am4charts.LineSeries())\n      series.dataFields.valueY = this.option.yAxis\n      series.dataFields.dateX = this.option.xAxis\n      series.strokeWidth = 3\n      series.fillOpacity = 0.5\n\n      // Add vertical scrollbar\n      chart.scrollbarY = new am4core.Scrollbar()\n      chart.scrollbarY.marginLeft = 0\n\n      // Add cursor\n      chart.cursor = new am4charts.XYCursor()\n      chart.cursor.behavior = 'zoomY'\n      chart.cursor.lineX.disabled = true\n    },\n    radar (chart) {\n      chart.data = this.option.data\n      /* Create axes */\n      const categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis())\n      categoryAxis.dataFields.category = this.option.xAxis[0]\n\n      const valueAxis = chart.yAxes.push(new am4charts.ValueAxis())\n      valueAxis.renderer.axisFills.template.fill = chart.colors.getIndex(2)\n      valueAxis.renderer.axisFills.template.fillOpacity = 0.05\n\n      /* Create and configure series */\n      const series = chart.series.push(new am4charts.RadarSeries())\n      series.dataFields.valueY = this.option.yAxis[0]\n      series.dataFields.categoryX = this.option.xAxis[0]\n      series.name = this.option.labels[0]\n      series.strokeWidth = 3\n    },\n    polarScatter (chart) {\n      chart.data = this.option.data\n      /* Create axes */\n      /* Create axes */\n      const xAxis = chart.xAxes.push(new am4charts.ValueAxis())\n      xAxis.renderer.maxLabelPosition = 0.99\n\n      const yAxis = chart.yAxes.push(new am4charts.ValueAxis())\n      yAxis.renderer.labels.template.verticalCenter = 'bottom'\n      yAxis.renderer.labels.template.horizontalCenter = 'right'\n      yAxis.renderer.maxLabelPosition = 0.99\n      yAxis.renderer.labels.template.paddingBottom = 1\n      yAxis.renderer.labels.template.paddingRight = 3\n\n      /* Create and configure series */\n      const series1 = chart.series.push(new am4charts.RadarSeries())\n      series1.bullets.push(new am4charts.CircleBullet())\n      series1.strokeOpacity = 0\n      series1.dataFields.valueX = 'x'\n      series1.dataFields.valueY = 'y'\n      series1.name = 'Series #1'\n      series1.sequencedInterpolation = true\n      series1.sequencedInterpolationDelay = 10\n      series1.data = [\n        { x: 83, y: 5.1 },\n        { x: 44, y: 5.8 },\n        { x: 76, y: 9 },\n        { x: 2, y: 1.4 },\n        { x: 100, y: 8.3 },\n        { x: 96, y: 1.7 },\n        { x: 68, y: 3.9 },\n        { x: 0, y: 3 },\n        { x: 100, y: 4.1 },\n        { x: 16, y: 5.5 },\n        { x: 71, y: 6.8 },\n        { x: 100, y: 7.9 },\n        { x: 35, y: 8 },\n        { x: 44, y: 6 },\n        { x: 64, y: 0.7 },\n        { x: 53, y: 3.3 },\n        { x: 92, y: 4.1 },\n        { x: 43, y: 7.3 },\n        { x: 15, y: 7.5 },\n        { x: 43, y: 4.3 },\n        { x: 90, y: 9.9 }\n      ]\n\n      const series2 = chart.series.push(new am4charts.RadarSeries())\n      series2.bullets.push(new am4charts.CircleBullet())\n      series2.strokeOpacity = 0\n      series2.dataFields.valueX = 'x'\n      series2.dataFields.valueY = 'y'\n      series2.name = 'Series #2'\n      series2.sequencedInterpolation = true\n      series2.sequencedInterpolationDelay = 10\n      series2.data = [\n        { x: 178, y: 1.3 },\n        { x: 129, y: 3.4 },\n        { x: 99, y: 2.4 },\n        { x: 80, y: 9.9 },\n        { x: 118, y: 9.4 },\n        { x: 103, y: 8.7 },\n        { x: 91, y: 4.2 },\n        { x: 151, y: 1.2 },\n        { x: 168, y: 5.2 },\n        { x: 168, y: 1.6 },\n        { x: 152, y: 1.2 },\n        { x: 138, y: 7.7 },\n        { x: 107, y: 3.9 },\n        { x: 124, y: 0.7 },\n        { x: 130, y: 2.6 },\n        { x: 86, y: 9.2 },\n        { x: 169, y: 7.5 },\n        { x: 122, y: 9.9 },\n        { x: 100, y: 3.8 },\n        { x: 172, y: 4.1 },\n        { x: 140, y: 7.3 },\n        { x: 161, y: 2.3 },\n        { x: 141, y: 0.9 }\n      ]\n\n      const series3 = chart.series.push(new am4charts.RadarSeries())\n      series3.bullets.push(new am4charts.CircleBullet())\n      series3.strokeOpacity = 0\n      series3.dataFields.valueX = 'x'\n      series3.dataFields.valueY = 'y'\n      series3.name = 'Series #3'\n      series3.sequencedInterpolation = true\n      series3.sequencedInterpolationDelay = 10\n      series3.data = [\n        { x: 419, y: 4.9 },\n        { x: 417, y: 5.5 },\n        { x: 434, y: 0.1 },\n        { x: 344, y: 2.5 },\n        { x: 279, y: 7.5 },\n        { x: 307, y: 8.4 },\n        { x: 279, y: 9 },\n        { x: 220, y: 8.4 },\n        { x: 201, y: 9.7 },\n        { x: 288, y: 1.2 },\n        { x: 333, y: 7.4 },\n        { x: 308, y: 1.9 },\n        { x: 330, y: 8 },\n        { x: 408, y: 1.7 },\n        { x: 274, y: 0.8 },\n        { x: 296, y: 3.1 },\n        { x: 279, y: 4.3 },\n        { x: 379, y: 5.6 },\n        { x: 175, y: 6.8 }\n      ]\n\n      /* Add legend */\n      chart.legend = new am4charts.Legend()\n\n      /* Add cursor */\n      chart.cursor = new am4charts.RadarCursor()\n    },\n    polar (chart) {\n      chart.data = this.option.data\n      const categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis())\n      categoryAxis.dataFields.category = 'direction'\n\n      const valueAxis = chart.yAxes.push(new am4charts.ValueAxis())\n      valueAxis.renderer.gridType = 'polygons'\n\n      const range = categoryAxis.axisRanges.create()\n      range.category = 'NW'\n      range.endCategory = 'NW'\n      range.axisFill.fill = am4core.color('#0084ff')\n      range.axisFill.fillOpacity = 0.3\n\n      const range2 = categoryAxis.axisRanges.create()\n      range2.category = 'N'\n      range2.endCategory = 'N'\n      range2.axisFill.fill = am4core.color('#e64141')\n      range2.axisFill.fillOpacity = 0.3\n\n      const range3 = categoryAxis.axisRanges.create()\n      range3.category = 'SE'\n      range3.endCategory = 'SW'\n      range3.axisFill.fill = am4core.color('#00ca00')\n      range3.axisFill.fillOpacity = 0.3\n      range3.locations.endCategory = 0\n\n      /* Create and configure series */\n\n      const series = chart.series.push(new am4charts.RadarSeries())\n      series.dataFields.valueY = 'value'\n      series.dataFields.categoryX = 'direction'\n      series.name = 'Wind direction'\n      series.strokeWidth = 3\n      series.fillOpacity = 0.2\n    },\n    pie (chart) {\n      chart.data = this.option.data\n      const series = chart.series.push(new am4charts.PieSeries3D())\n      series.colors.list = []\n      for (let j = 0; j < this.option.colors.length; j++) {\n        series.colors.list.push(am4core.color(this.option.colors[j]))\n      }\n      series.dataFields.value = this.option.value[0]\n      series.dataFields.category = this.option.category[0]\n    },\n    lineBar (chart) {\n      chart.colors.list = [am4core.color('#827af3')]\n      if (this.darkMode) {\n        chart.stroke = am4core.color('#8c91b6')\n      }\n      const chartdata = []\n      let value = 120\n\n      const names = ['ra',\n        'De',\n        'Ca',\n        'Ja',\n        'Ri',\n        'An'\n      ]\n\n      for (let i = 0; i < names.length; i++) {\n        value += Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 5)\n        chartdata.push({ category: names[i], value: value })\n      }\n\n      chart.data = chartdata\n      const categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis())\n      categoryAxis.renderer.grid.template.location = 0\n      categoryAxis.dataFields.category = 'category'\n      categoryAxis.renderer.minGridDistance = 15\n      categoryAxis.renderer.grid.template.location = 0.5\n      categoryAxis.renderer.grid.template.strokeDasharray = '1,3'\n      categoryAxis.renderer.labels.template.rotation = -90\n      categoryAxis.renderer.labels.template.horizontalCenter = 'left'\n      categoryAxis.renderer.labels.template.location = 0.5\n\n      categoryAxis.renderer.labels.template.adapter.add('dx', function (dx, target) {\n        return -target.maxRight / 2\n      })\n\n      const valueAxis = chart.yAxes.push(new am4charts.ValueAxis())\n      valueAxis.tooltip.disabled = true\n      valueAxis.renderer.ticks.template.disabled = true\n      valueAxis.renderer.axisFills.template.disabled = true\n\n      const series = chart.series.push(new am4charts.ColumnSeries())\n      series.dataFields.categoryX = 'category'\n      series.dataFields.valueY = 'value'\n      series.tooltipText = '{valueY.value}'\n      series.sequencedInterpolation = true\n      series.fillOpacity = 0\n      series.strokeOpacity = 1\n      series.strokeDashArray = '1,3'\n      series.columns.template.width = 0.01\n      series.tooltip.pointerOrientation = 'horizontal'\n\n      series.bullets.create(am4charts.CircleBullet)\n      chart.cursor = new am4charts.XYCursor()\n    },\n    map () {\n      am4core.useTheme(am4themes_animated)\n      var e = {\n        AD: {\n          country: 'Andorra',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['andorraLow', 'andorraHigh']\n        },\n        AE: {\n          country: 'United Arab Emirates',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: ['uaeLow', 'uaeHigh']\n        },\n        AF: {\n          country: 'Afghanistan',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: []\n        },\n        AG: {\n          country: 'Antigua and Barbuda',\n          continent_code: 'NA',\n          continent: 'North America',\n          maps: ['antiguaBarbudaLow', 'antiguaBarbudaHigh']\n        },\n        AI: {\n          country: 'Anguilla',\n          continent_code: 'NA',\n          continent: 'North America',\n          maps: ['anguillaLow', 'anguillaHigh']\n        },\n        AL: {\n          country: 'Albania',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['albaniaLow', 'albaniaHigh']\n        },\n        AM: {\n          country: 'Armenia',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['armeniaLow', 'armeniaHigh']\n        },\n        AO: {\n          country: 'Angola',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: ['angolaLow', 'angolaHigh']\n        },\n        AQ: {\n          country: 'Antarctica',\n          continent_code: 'AN',\n          continent: 'Antarctica',\n          maps: []\n        },\n        AR: {\n          country: 'Argentina',\n          continent_code: 'SA',\n          continent: 'South America',\n          maps: ['argentinaLow', 'argentinaHigh']\n        },\n        AS: {\n          country: 'American Samoa',\n          continent_code: 'OC',\n          continent: 'Oceania',\n          maps: ['americanSamoaLow', 'americanSamoaHigh']\n        },\n        AT: {\n          country: 'Austria',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['austriaLow', 'austriaHigh']\n        },\n        AU: {\n          country: 'Australia',\n          continent_code: 'OC',\n          continent: 'Oceania',\n          maps: ['australiaLow', 'australiaHigh']\n        },\n        AW: {\n          country: 'Aruba',\n          continent_code: 'NA',\n          continent: 'North America',\n          maps: ['arubaLow', 'arubaHigh']\n        },\n        AX: {\n          country: 'Aland Islands',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: []\n        },\n        AZ: {\n          country: 'Azerbaijan',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['azerbaijanLow', 'azerbaijanHigh']\n        },\n        BA: {\n          country: 'Bosnia and Herzegovina',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['bosniaHerzegovinaLow', 'bosniaHerzegovinaHigh', 'bosniaHerzegovinaCantonsLow', 'bosniaHerzegovinaCantonsHigh']\n        },\n        BB: {\n          country: 'Barbados',\n          continent_code: 'NA',\n          continent: 'North America',\n          maps: ['barbadosLow', 'barbadosHigh']\n        },\n        BD: {\n          country: 'Bangladesh',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: ['bangladeshLow', 'bangladeshHigh']\n        },\n        BE: {\n          country: 'Belgium',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['belgiumLow', 'belgiumHigh']\n        },\n        BF: {\n          country: 'Burkina Faso',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: ['burkinaFasoLow', 'burkinaFasoHigh']\n        },\n        BG: {\n          country: 'Bulgaria',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['bulgariaLow', 'bulgariaHigh']\n        },\n        BH: {\n          country: 'Bahrain',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: ['bahrainLow', 'bahrainHigh']\n        },\n        BI: {\n          country: 'Burundi',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: ['burundiLow', 'burundiHigh']\n        },\n        BJ: {\n          country: 'Benin',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: ['beninLow', 'beninHigh']\n        },\n        BL: {\n          country: 'Saint Barthelemy',\n          continent_code: 'NA',\n          continent: 'North America',\n          maps: []\n        },\n        BM: {\n          country: 'Bermuda',\n          continent_code: 'NA',\n          continent: 'North America',\n          maps: ['bermudaLow', 'bermudaHigh']\n        },\n        BN: {\n          country: 'Brunei Darussalam',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: ['bruneiDarussalamLow', 'bruneiDarussalamHigh']\n        },\n        BO: {\n          country: 'Bolivia, Plurinational State of',\n          continent_code: 'SA',\n          continent: 'South America',\n          maps: ['boliviaLow', 'boliviaHigh']\n        },\n        BQ: {\n          country: 'Bonaire, Sint Eustatius and Saba',\n          continent_code: 'NA',\n          continent: 'North America',\n          maps: ['bonaireSintEustatiusSabaLow', 'bonaireSintEustatiusSabaHigh']\n        },\n        BR: {\n          country: 'Brazil',\n          continent_code: 'SA',\n          continent: 'South America',\n          maps: ['brazilLow', 'brazilHigh']\n        },\n        BS: {\n          country: 'Bahamas',\n          continent_code: 'NA',\n          continent: 'North America',\n          maps: []\n        },\n        BT: {\n          country: 'Bhutan',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: ['bhutanLow', 'bhutanHigh']\n        },\n        BV: {\n          country: 'Bouvet Island',\n          continent_code: 'AN',\n          continent: 'Antarctica',\n          maps: []\n        },\n        BW: {\n          country: 'Botswana',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: ['botswanaLow', 'botswanaHigh']\n        },\n        BY: {\n          country: 'Belarus',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['belarusLow', 'belarusHigh']\n        },\n        BZ: {\n          country: 'Belize',\n          continent_code: 'NA',\n          continent: 'North America',\n          maps: ['belizeLow', 'belizeHigh']\n        },\n        CA: {\n          country: 'Canada',\n          continent_code: 'NA',\n          continent: 'North America',\n          maps: ['canadaLow', 'canadaHigh']\n        },\n        CC: {\n          country: 'Cocos (Keeling) Islands',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: []\n        },\n        CD: {\n          country: 'Congo, the Democratic Republic of the',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: ['congoDRLow', 'congoDRHigh']\n        },\n        CF: {\n          country: 'Central African Republic',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: ['centralAfricanRepublicLow', 'centralAfricanRepublicHigh']\n        },\n        CG: {\n          country: 'Congo',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: ['congoLow', 'congoHigh']\n        },\n        CH: {\n          country: 'Switzerland',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['switzerlandLow', 'switzerlandHigh']\n        },\n        CI: {\n          country: \"Cote d'Ivoire\",\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: []\n        },\n        CK: {\n          country: 'Cook Islands',\n          continent_code: 'OC',\n          continent: 'Oceania',\n          maps: []\n        },\n        CL: {\n          country: 'Chile',\n          continent_code: 'SA',\n          continent: 'South America',\n          maps: ['chileLow', 'chileHigh']\n        },\n        CM: {\n          country: 'Cameroon',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: ['cameroonLow', 'cameroonHigh']\n        },\n        CN: {\n          country: 'China',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: ['chinaLow', 'chinaHigh']\n        },\n        CO: {\n          country: 'Colombia',\n          continent_code: 'SA',\n          continent: 'South America',\n          maps: ['colombiaLow', 'colombiaHigh', 'colombiaMuniLow', 'colombiaMuniHigh']\n        },\n        CR: {\n          country: 'Costa Rica',\n          continent_code: 'NA',\n          continent: 'North America',\n          maps: ['costaRicaLow', 'costaRicaHigh']\n        },\n        CU: {\n          country: 'Cuba',\n          continent_code: 'NA',\n          continent: 'North America',\n          maps: []\n        },\n        CV: {\n          country: 'Cape Verde',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: ['capeVerdeLow', 'capeVerdeHigh']\n        },\n        CW: {\n          country: 'Curacao',\n          continent_code: 'NA',\n          continent: 'North America',\n          maps: ['curacaoLow', 'curacaoHigh']\n        },\n        CX: {\n          country: 'Christmas Island',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: []\n        },\n        CY: {\n          country: 'Cyprus',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['cyprusLow', 'cyprusHigh', 'cyprusNorthCyprusLow', 'cyprusNorthCyprusHigh']\n        },\n        CZ: {\n          country: 'Czech Republic',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['czechiaLow', 'czechiaHigh']\n        },\n        DE: {\n          country: 'Germany',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['germanyLow', 'germanyHigh']\n        },\n        DJ: {\n          country: 'Djibouti',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: ['djiboutiLow', 'djiboutiHigh']\n        },\n        DK: {\n          country: 'Denmark',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['denmarkLow', 'denmarkHigh']\n        },\n        DM: {\n          country: 'Dominica',\n          continent_code: 'NA',\n          continent: 'North America',\n          maps: ['dominicaLow', 'dominicaHigh']\n        },\n        DO: {\n          country: 'Dominican Republic',\n          continent_code: 'NA',\n          continent: 'North America',\n          maps: ['dominicanRepublicLow', 'dominicanRepublicHigh', 'dominicanRepublicMuniLow', 'dominicanRepublicMuniHigh']\n        },\n        DZ: {\n          country: 'Algeria',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: ['algeriaLow', 'algeriaHigh']\n        },\n        EC: {\n          country: 'Ecuador',\n          continent_code: 'SA',\n          continent: 'South America',\n          maps: ['ecuadorLow', 'ecuadorHigh']\n        },\n        EE: {\n          country: 'Estonia',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['estoniaLow', 'estoniaHigh']\n        },\n        EG: {\n          country: 'Egypt',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: ['egyptLow', 'egyptHigh']\n        },\n        EH: {\n          country: 'Western Sahara',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: []\n        },\n        ER: {\n          country: 'Eritrea',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: []\n        },\n        ES: {\n          country: 'Spain',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['spainLow', 'spainHigh', 'spainProvincesLow', 'spainProvincesHigh']\n        },\n        ET: {\n          country: 'Ethiopia',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: []\n        },\n        FI: {\n          country: 'Finland',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['finlandLow', 'finlandHigh']\n        },\n        FJ: {\n          country: 'Fiji',\n          continent_code: 'OC',\n          continent: 'Oceania',\n          maps: ['fijiEastLow', 'fijiEastHigh', 'fijiWestLow', 'fijiWestHigh']\n        },\n        FK: {\n          country: 'Falkland Islands (Malvinas)',\n          continent_code: 'SA',\n          continent: 'South America',\n          maps: []\n        },\n        FM: {\n          country: 'Micronesia, Federated States of',\n          continent_code: 'OC',\n          continent: 'Oceania',\n          maps: []\n        },\n        FO: {\n          country: 'Faroe Islands',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['faroeIslandsLow', 'faroeIslandsHigh']\n        },\n        FR: {\n          country: 'France',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['franceLow', 'franceHigh', 'franceDepartmentsLow', 'franceDepartmentsHigh']\n        },\n        GA: {\n          country: 'Gabon',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: ['gabonLow', 'gabonHigh']\n        },\n        GB: {\n          country: 'United Kingdom',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['ukLow', 'ukHigh', 'ukCountiesLow', 'ukCountiesHigh']\n        },\n        'GB-CHA': {\n          country: 'Channel Islands',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['channelIslandsLow', 'channelIslandsHigh']\n        },\n        GD: {\n          country: 'Grenada',\n          continent_code: 'NA',\n          continent: 'North America',\n          maps: []\n        },\n        GE: {\n          country: 'Georgia',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['georgiaLow', 'georgiaHigh', 'georgiaSouthOssetiaLow', 'georgiaSouthOssetiaHigh']\n        },\n        GF: {\n          country: 'French Guiana',\n          continent_code: 'SA',\n          continent: 'South America',\n          maps: ['frenchGuianaLow', 'frenchGuianaHigh']\n        },\n        GG: {\n          country: 'Guernsey',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: []\n        },\n        GH: {\n          country: 'Ghana',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: []\n        },\n        GI: {\n          country: 'Gibraltar',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: []\n        },\n        GL: {\n          country: 'Greenland',\n          continent_code: 'NA',\n          continent: 'North America',\n          maps: ['greenlandLow', 'greenlandHigh']\n        },\n        GM: {\n          country: 'Gambia',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: []\n        },\n        GN: {\n          country: 'Guinea',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: ['guineaLow', 'guineaHigh']\n        },\n        GP: {\n          country: 'Guadeloupe',\n          continent_code: 'NA',\n          continent: 'North America',\n          maps: []\n        },\n        GQ: {\n          country: 'Equatorial Guinea',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: ['equatorialGuineaLow', 'equatorialGuineaHigh']\n        },\n        GR: {\n          country: 'Greece',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['greeceLow', 'greeceHigh']\n        },\n        GS: {\n          country: 'South Georgia and the South Sandwich Islands',\n          continent_code: 'AN',\n          continent: 'Antarctica',\n          maps: []\n        },\n        GT: {\n          country: 'Guatemala',\n          continent_code: 'NA',\n          continent: 'North America',\n          maps: []\n        },\n        GU: {\n          country: 'Guam',\n          continent_code: 'OC',\n          continent: 'Oceania',\n          maps: []\n        },\n        GW: {\n          country: 'Guinea-Bissau',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: []\n        },\n        GY: {\n          country: 'Guyana',\n          continent_code: 'SA',\n          continent: 'South America',\n          maps: []\n        },\n        HK: {\n          country: 'Hong Kong',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: ['hongKongLow', 'hongKongHigh']\n        },\n        HM: {\n          country: 'Heard Island and McDonald Islands',\n          continent_code: 'AN',\n          continent: 'Antarctica',\n          maps: []\n        },\n        HN: {\n          country: 'Honduras',\n          continent_code: 'NA',\n          continent: 'North America',\n          maps: ['hondurasLow', 'hondurasHigh']\n        },\n        HR: {\n          country: 'Croatia',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['croatiaLow', 'croatiaHigh']\n        },\n        HT: {\n          country: 'Haiti',\n          continent_code: 'NA',\n          continent: 'North America',\n          maps: []\n        },\n        HU: {\n          country: 'Hungary',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['hungaryLow', 'hungaryHigh']\n        },\n        ID: {\n          country: 'Indonesia',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: ['indonesiaLow', 'indonesiaHigh']\n        },\n        IE: {\n          country: 'Ireland',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['irelandLow', 'irelandHigh']\n        },\n        IL: {\n          country: 'Israel',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: ['israelLow', 'israelHigh', 'israelPalestineLow', 'israelPalestineHigh']\n        },\n        IM: {\n          country: 'Isle of Man',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: []\n        },\n        IN: {\n          country: 'India',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: ['indiaLow', 'indiaHigh']\n        },\n        IO: {\n          country: 'British Indian Ocean Territory',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: []\n        },\n        IQ: {\n          country: 'Iraq',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: []\n        },\n        IR: {\n          country: 'Iran, Islamic Republic of',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: []\n        },\n        IS: {\n          country: 'Iceland',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['icelandLow', 'icelandHigh']\n        },\n        IT: {\n          country: 'Italy',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['italyLow', 'italyHigh']\n        },\n        JE: {\n          country: 'Jersey',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: []\n        },\n        JM: {\n          country: 'Jamaica',\n          continent_code: 'NA',\n          continent: 'North America',\n          maps: []\n        },\n        JO: {\n          country: 'Jordan',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: []\n        },\n        JP: {\n          country: 'Japan',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: ['japanLow', 'japanHigh']\n        },\n        KE: {\n          country: 'Kenya',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: ['kenyaLow', 'kenyaHigh']\n        },\n        KG: {\n          country: 'Kyrgyzstan',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: ['kyrgyzstanLow', 'kyrgyzstanHigh']\n        },\n        KH: {\n          country: 'Cambodia',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: ['cambodiaLow', 'cambodiaHigh']\n        },\n        KI: {\n          country: 'Kiribati',\n          continent_code: 'OC',\n          continent: 'Oceania',\n          maps: []\n        },\n        KM: {\n          country: 'Comoros',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: []\n        },\n        KN: {\n          country: 'Saint Kitts and Nevis',\n          continent_code: 'NA',\n          continent: 'North America',\n          maps: []\n        },\n        KP: {\n          country: \"Korea, Democratic People's Republic of\",\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: ['northKoreaLow', 'northKoreaHigh']\n        },\n        KR: {\n          country: 'Korea, Republic of',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: ['southKoreaLow', 'southKoreaHigh']\n        },\n        KT: {\n          country: 'Saint Kitts and Nevis',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: ['stKittsNevisLow', 'stKittsNevisHigh']\n        },\n        KW: {\n          country: 'Kuwait',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: []\n        },\n        KY: {\n          country: 'Cayman Islands',\n          continent_code: 'NA',\n          continent: 'North America',\n          maps: []\n        },\n        KZ: {\n          country: 'Kazakhstan',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['kazakhstanLow', 'kazakhstanHigh']\n        },\n        LA: {\n          country: \"Lao People's Democratic Republic\",\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: []\n        },\n        LB: {\n          country: 'Lebanon',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: []\n        },\n        LC: {\n          country: 'Saint Lucia',\n          continent_code: 'NA',\n          continent: 'North America',\n          maps: ['saintLuciaLow', 'saintLuciaHigh']\n        },\n        LI: {\n          country: 'Liechtenstein',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['liechtensteinLow', 'liechtensteinHigh']\n        },\n        LK: {\n          country: 'Sri Lanka',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: ['sriLankaLow', 'sriLankaHigh']\n        },\n        LR: {\n          country: 'Liberia',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: []\n        },\n        LS: {\n          country: 'Lesotho',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: []\n        },\n        LT: {\n          country: 'Lithuania',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['lithuaniaLow', 'lithuaniaHigh']\n        },\n        LU: {\n          country: 'Luxembourg',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: []\n        },\n        LV: {\n          country: 'Latvia',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['latviaLow', 'latviaHigh']\n        },\n        LY: {\n          country: 'Libya',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: []\n        },\n        MA: {\n          country: 'Morocco',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: ['moroccoLow', 'moroccoHigh']\n        },\n        MC: {\n          country: 'Monaco',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: []\n        },\n        MD: {\n          country: 'Moldova, Republic of',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['moldovaLow', 'moldovaHigh']\n        },\n        ME: {\n          country: 'Montenegro',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: []\n        },\n        MF: {\n          country: 'Saint Martin (French Part)',\n          continent_code: 'NA',\n          continent: 'North America',\n          maps: []\n        },\n        MG: {\n          country: 'Madagascar',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: []\n        },\n        MH: {\n          country: 'Marshall Islands',\n          continent_code: 'OC',\n          continent: 'Oceania',\n          maps: []\n        },\n        MK: {\n          country: 'North Macedonia',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: []\n        },\n        ML: {\n          country: 'Mali',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: ['maliLow', 'maliHigh']\n        },\n        MM: {\n          country: 'Myanmar',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: []\n        },\n        MN: {\n          country: 'Mongolia',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: ['mongoliaLow', 'mongoliaHigh']\n        },\n        MO: {\n          country: 'Macao',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: []\n        },\n        MP: {\n          country: 'Northern Mariana Islands',\n          continent_code: 'OC',\n          continent: 'Oceania',\n          maps: []\n        },\n        MQ: {\n          country: 'Martinique',\n          continent_code: 'NA',\n          continent: 'North America',\n          maps: []\n        },\n        MR: {\n          country: 'Mauritania',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: []\n        },\n        MS: {\n          country: 'Montserrat',\n          continent_code: 'NA',\n          continent: 'North America',\n          maps: []\n        },\n        MT: {\n          country: 'Malta',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['maltaLow', 'maltaHigh']\n        },\n        MU: {\n          country: 'Mauritius',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: []\n        },\n        MV: {\n          country: 'Maldives',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: ['maldivesLow', 'maldivesHigh', 'maldivesIslandsLow', 'maldivesIslandsHigh']\n        },\n        MW: {\n          country: 'Malawi',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: []\n        },\n        MX: {\n          country: 'Mexico',\n          continent_code: 'NA',\n          continent: 'North America',\n          maps: ['mexicoLow', 'mexicoHigh']\n        },\n        MY: {\n          country: 'Malaysia',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: ['malaysiaLow', 'malaysiaHigh']\n        },\n        MZ: {\n          country: 'Mozambique',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: []\n        },\n        NA: {\n          country: 'Namibia',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: ['namibiaLow', 'namibiaHigh']\n        },\n        NC: {\n          country: 'New Caledonia',\n          continent_code: 'OC',\n          continent: 'Oceania',\n          maps: []\n        },\n        NE: {\n          country: 'Niger',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: []\n        },\n        NF: {\n          country: 'Norfolk Island',\n          continent_code: 'OC',\n          continent: 'Oceania',\n          maps: []\n        },\n        NG: {\n          country: 'Nigeria',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: ['nigeriaLow', 'nigeriaHigh']\n        },\n        NI: {\n          country: 'Nicaragua',\n          continent_code: 'NA',\n          continent: 'North America',\n          maps: ['nicaraguaLow', 'nicaraguaHigh']\n        },\n        NL: {\n          country: 'Netherlands',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['netherlandsLow', 'netherlandsHigh']\n        },\n        NO: {\n          country: 'Norway',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['norwayLow', 'norwayHigh']\n        },\n        NP: {\n          country: 'Nepal',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: ['nepalLow', 'nepalHigh']\n        },\n        NR: {\n          country: 'Nauru',\n          continent_code: 'OC',\n          continent: 'Oceania',\n          maps: []\n        },\n        NU: {\n          country: 'Niue',\n          continent_code: 'OC',\n          continent: 'Oceania',\n          maps: []\n        },\n        NZ: {\n          country: 'New Zealand',\n          continent_code: 'OC',\n          continent: 'Oceania',\n          maps: ['newZealandLow', 'newZealandHigh']\n        },\n        OM: {\n          country: 'Oman',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: ['omanLow', 'omanHigh']\n        },\n        PA: {\n          country: 'Panama',\n          continent_code: 'NA',\n          continent: 'North America',\n          maps: ['panamaLow', 'panamaHigh']\n        },\n        PE: {\n          country: 'Peru',\n          continent_code: 'SA',\n          continent: 'South America',\n          maps: ['peruLow', 'peruHigh']\n        },\n        PF: {\n          country: 'French Polynesia',\n          continent_code: 'OC',\n          continent: 'Oceania',\n          maps: []\n        },\n        PG: {\n          country: 'Papua New Guinea',\n          continent_code: 'OC',\n          continent: 'Oceania',\n          maps: []\n        },\n        PH: {\n          country: 'Philippines',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: ['philippinesLow', 'philippinesHigh']\n        },\n        PK: {\n          country: 'Pakistan',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: ['pakistanLow', 'pakistanHigh']\n        },\n        PL: {\n          country: 'Poland',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['polandLow', 'polandHigh']\n        },\n        PM: {\n          country: 'Saint Pierre and Miquelon',\n          continent_code: 'NA',\n          continent: 'North America',\n          maps: ['stPierreMiquelonLow', 'stPierreMiquelonHigh']\n        },\n        PN: {\n          country: 'Pitcairn',\n          continent_code: 'OC',\n          continent: 'Oceania',\n          maps: []\n        },\n        PR: {\n          country: 'Puerto Rico',\n          continent_code: 'NA',\n          continent: 'North America',\n          maps: ['puertoRicoLow', 'puertoRicoHigh']\n        },\n        PS: {\n          country: 'Palestinian, State of',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: ['palestineLow', 'palestineHigh']\n        },\n        PT: {\n          country: 'Portugal',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['portugalLow', 'portugalHigh', 'portugalRegionsLow', 'portugalRegionsHigh']\n        },\n        PW: {\n          country: 'Palau',\n          continent_code: 'OC',\n          continent: 'Oceania',\n          maps: []\n        },\n        PY: {\n          country: 'Paraguay',\n          continent_code: 'SA',\n          continent: 'South America',\n          maps: ['paraguayLow', 'paraguayHigh']\n        },\n        QA: {\n          country: 'Qatar',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: ['qatarLow', 'qatarHigh']\n        },\n        RE: {\n          country: 'Reunion',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: []\n        },\n        RO: {\n          country: 'Romania',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['romaniaLow', 'romaniaHigh']\n        },\n        RS: {\n          country: 'Serbia',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['serbiaLow', 'serbiaHigh', 'serbiaNoKosovoLow', 'serbiaNoKosovoHigh']\n        },\n        RU: {\n          country: 'Russian Federation',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['russiaLow', 'russiaHigh', 'russiaCrimeaLow', 'russiaCrimeaHigh']\n        },\n        RW: {\n          country: 'Rwanda',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: []\n        },\n        SA: {\n          country: 'Saudi Arabia',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: ['saudiArabiaLow', 'saudiArabiaHigh']\n        },\n        SB: {\n          country: 'Solomon Islands',\n          continent_code: 'OC',\n          continent: 'Oceania',\n          maps: ['solomonIslandsLow', 'solomonIslandsHigh']\n        },\n        SC: {\n          country: 'Seychelles',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: ['seychellesLow', 'seychellesHigh']\n        },\n        SD: {\n          country: 'Sudan',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: ['sudanLow', 'sudanHigh']\n        },\n        SE: {\n          country: 'Sweden',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['swedenLow', 'swedenHigh']\n        },\n        SG: {\n          country: 'Singapore',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: ['singaporeLow', 'singaporeHigh']\n        },\n        SH: {\n          country: 'Saint Helena, Ascension and Tristan da Cunha',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: ['saintHelenaLow', 'saintHelenaHigh']\n        },\n        SI: {\n          country: 'Slovenia',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['sloveniaLow', 'sloveniaHigh', 'sloveniaRegionsLow', 'sloveniaRegionsHigh']\n        },\n        SJ: {\n          country: 'Svalbard and Jan Mayen',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['svalbardLow', 'svalbardHigh']\n        },\n        SK: {\n          country: 'Slovakia',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['slovakiaLow', 'slovakiaHigh']\n        },\n        SL: {\n          country: 'Sierra Leone',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: []\n        },\n        SM: {\n          country: 'San Marino',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['sanMarinoLow', 'sanMarinoHigh']\n        },\n        SN: {\n          country: 'Senegal',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: ['senegalLow', 'senegalHigh']\n        },\n        SO: {\n          country: 'Somalia',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: ['somaliaLow', 'somaliaHigh']\n        },\n        SR: {\n          country: 'Suriname',\n          continent_code: 'SA',\n          continent: 'South America',\n          maps: []\n        },\n        SS: {\n          country: 'South Sudan',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: []\n        },\n        ST: {\n          country: 'Sao Tome and Principe',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: ['saoTomePrincipeLow', 'saoTomePrincipeHigh']\n        },\n        SV: {\n          country: 'El Salvador',\n          continent_code: 'NA',\n          continent: 'North America',\n          maps: ['elSalvadorLow', 'elSalvadorHigh']\n        },\n        SX: {\n          country: 'Sint Maarten (Dutch Part)',\n          continent_code: 'NA',\n          continent: 'North America',\n          maps: []\n        },\n        SY: {\n          country: 'Syrian Arab Republic',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: ['syriaLow', 'syriaHigh']\n        },\n        SZ: {\n          country: 'Swaziland',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: ['eswatiniLow', 'eswatiniHigh']\n        },\n        TC: {\n          country: 'Turks and Caicos Islands',\n          continent_code: 'NA',\n          continent: 'North America',\n          maps: []\n        },\n        TD: {\n          country: 'Chad',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: ['chadLow', 'chadHigh']\n        },\n        TF: {\n          country: 'French Southern Territories',\n          continent_code: 'AN',\n          continent: 'Antarctica',\n          maps: []\n        },\n        TG: {\n          country: 'Togo',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: []\n        },\n        TH: {\n          country: 'Thailand',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: ['thailandLow', 'thailandHigh']\n        },\n        TJ: {\n          country: 'Tajikistan',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: ['tajikistanLow', 'tajikistanHigh']\n        },\n        TK: {\n          country: 'Tokelau',\n          continent_code: 'OC',\n          continent: 'Oceania',\n          maps: []\n        },\n        TL: {\n          country: 'Timor-Leste',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: []\n        },\n        TM: {\n          country: 'Turkmenistan',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: []\n        },\n        TN: {\n          country: 'Tunisia',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: ['tunisiaLow', 'tunisiaHigh']\n        },\n        TO: {\n          country: 'Tonga',\n          continent_code: 'OC',\n          continent: 'Oceania',\n          maps: []\n        },\n        TR: {\n          country: 'Turkey',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['turkeyLow', 'turkeyHigh']\n        },\n        TT: {\n          country: 'Trinidad and Tobago',\n          continent_code: 'NA',\n          continent: 'North America',\n          maps: []\n        },\n        TV: {\n          country: 'Tuvalu',\n          continent_code: 'OC',\n          continent: 'Oceania',\n          maps: []\n        },\n        TW: {\n          country: 'Taiwan, Province of China',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: []\n        },\n        TZ: {\n          country: 'Tanzania, United Republic of',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: ['tanzaniaLow', 'tanzaniaHigh']\n        },\n        UA: {\n          country: 'Ukraine',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['ukraineLow', 'ukraineHigh']\n        },\n        UG: {\n          country: 'Uganda',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: []\n        },\n        UM: {\n          country: 'United States Minor Outlying Islands',\n          continent_code: 'OC',\n          continent: 'Oceania',\n          maps: []\n        },\n        US: {\n          country: 'United States',\n          continent_code: 'NA',\n          continent: 'North America',\n          maps: ['usaLow', 'usaHigh', 'usaTerritoriesLow', 'usaTerritoriesHigh', 'usaTerritories2Low', 'usaTerritories2High']\n        },\n        UY: {\n          country: 'Uruguay',\n          continent_code: 'SA',\n          continent: 'South America',\n          maps: []\n        },\n        UZ: {\n          country: 'Uzbekistan',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: ['uzbekinstanLow', 'uzbekinstanHigh']\n        },\n        VA: {\n          country: 'Holy See (Vatican City State)',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['vaticanLow', 'vaticanHigh']\n        },\n        VC: {\n          country: 'Saint Vincent and the Grenadines',\n          continent_code: 'NA',\n          continent: 'North America',\n          maps: ['saintVincentLow', 'saintVincentHigh']\n        },\n        VE: {\n          country: 'Venezuela, Bolivarian Republic of',\n          continent_code: 'SA',\n          continent: 'South America',\n          maps: ['venezuelaLow', 'venezuelaHigh']\n        },\n        VG: {\n          country: 'Virgin Islands, British',\n          continent_code: 'NA',\n          continent: 'North America',\n          maps: []\n        },\n        VI: {\n          country: 'Virgin Islands, U.S.',\n          continent_code: 'NA',\n          continent: 'North America',\n          maps: []\n        },\n        VN: {\n          country: 'Viet Nam',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: ['vietnamLow', 'vietnamHigh']\n        },\n        VU: {\n          country: 'Vanuatu',\n          continent_code: 'OC',\n          continent: 'Oceania',\n          maps: []\n        },\n        WF: {\n          country: 'Wallis and Futuna',\n          continent_code: 'OC',\n          continent: 'Oceania',\n          maps: []\n        },\n        WS: {\n          country: 'Samoa',\n          continent_code: 'OC',\n          continent: 'Oceania',\n          maps: ['samoaLow', 'samoaHigh']\n        },\n        YE: {\n          country: 'Yemen',\n          continent_code: 'AS',\n          continent: 'Asia',\n          maps: ['yemenLow', 'yemenHigh']\n        },\n        YT: {\n          country: 'Mayotte',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: []\n        },\n        ZA: {\n          country: 'South Africa',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: ['southAfricaLow', 'southAfricaHigh']\n        },\n        ZM: {\n          country: 'Zambia',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: ['zambiaLow', 'zambiaHigh']\n        },\n        ZW: {\n          country: 'Zimbabwe',\n          continent_code: 'AF',\n          continent: 'Africa',\n          maps: ['zimbabweLow', 'zimbabweHigh']\n        },\n        XK: {\n          country: 'Kosovo',\n          continent_code: 'EU',\n          continent: 'Europe',\n          maps: ['kosovoLow', 'kosovoHigh']\n        }\n      }\n      var t = {\n        AF: 0,\n        AN: 1,\n        AS: 2,\n        EU: 3,\n        NA: 4,\n        OC: 5,\n        SA: 6\n      }\n      const a = am4core.create('chartdiv', am4maps.MapChart)\n      a.projection = new am4maps.projections.Miller()\n      const n = a.series.push(new am4maps.MapPolygonSeries())\n      // eslint-disable-next-line no-sequences,no-unused-expressions\n      n.useGeodata = !0, n.geodata = am4geodataWorldLow, n.exclude = ['AQ']\n      const o = n.mapPolygons.template\n      // eslint-disable-next-line no-sequences,no-unused-expressions\n      o.tooltipText = '{name}', o.nonScalingStroke = !0, o.strokeOpacity = 0.5, o.fill = am4core.color('#eee'), o.propertyFields.fill = 'color', o.states.create('hover').properties.fill = a.colors.getIndex(9)\n      const r = a.series.push(new am4maps.MapPolygonSeries())\n      // eslint-disable-next-line no-sequences,no-unused-expressions\n      r.useGeodata = !0, r.hide(), r.geodataSource.events.on('done', function (e) {\n        // eslint-disable-next-line no-sequences,no-unused-expressions\n        n.hide(), r.show()\n      })\n      const i = r.mapPolygons.template\n      // eslint-disable-next-line no-sequences,no-unused-expressions\n      i.tooltipText = '{name}', i.nonScalingStroke = !0, i.strokeOpacity = 0.5, i.fill = am4core.color('#eee'), i.states.create('hover').properties.fill = a.colors.getIndex(9), o.events.on('hit', function (e) {\n        e.target.series.chart.zoomToMapObject(e.target)\n        var t = e.target.dataItem.dataContext.map\n        // eslint-disable-next-line no-sequences,no-unused-expressions\n        t && (e.target.isHover = !1, r.geodataSource.url = 'https://www.amcharts.com/lib/4/geodata/json/' + t + '.json', r.geodataSource.load())\n      })\n      const c = []\n      for (const s in e) {\n        // eslint-disable-next-line no-prototype-builtins\n        if (e.hasOwnProperty(s)) {\n          const l = e[s]\n          l.maps.length && c.push({\n            id: s,\n            color: a.colors.getIndex(t[l.continent_code]),\n            map: l.maps[0]\n          })\n        }\n      }\n      // eslint-disable-next-line no-sequences,no-unused-expressions\n      n.data = c, a.zoomControl = new am4maps.ZoomControl()\n      const d = new am4core.Button()\n      // eslint-disable-next-line no-sequences,no-unused-expressions\n      d.events.on('hit', function () {\n        // eslint-disable-next-line no-sequences,no-unused-expressions\n        n.show(), r.hide(), a.goHome()\n        // eslint-disable-next-line no-sequences,no-unused-expressions\n      }), d.icon = new am4core.Sprite(), d.padding(7, 5, 7, 5), d.width = 30, d.icon.path = 'M16,8 L14,8 L14,16 L10,16 L10,10 L6,10 L6,16 L2,16 L2,8 L0,8 L8,0 L16,8 Z M16,8', d.marginBottom = 10, d.parent = a.zoomControl, d.insertBefore(a.zoomControl.plusButton)\n    },\n    linierChart (chart) {\n      chart.colors.list = [am4core.color('#827af3'), am4core.color('#6ce6f4')]\n      if (this.darkMode) {\n        chart.stroke = am4core.color('#8c91b6')\n      }\n      const data = []\n      let open = 100\n      let close = 120\n\n      const names = ['Rai',\n        'Dem',\n        'Caro',\n        'Jac',\n        'Rich',\n        'Ano',\n        'Amd',\n        'Idal',\n        'Joi',\n        'Mar',\n        'Cur',\n        'Shl',\n        'Meg'\n      ]\n\n      for (let i = 0; i < names.length; i++) {\n        open += Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 5)\n        close = open + Math.round(Math.random() * 10) + 3\n        data.push({ category: names[i], open: open, close: close })\n      }\n\n      chart.data = data\n      const categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis())\n      categoryAxis.renderer.grid.template.location = 0\n      categoryAxis.dataFields.category = 'category'\n      categoryAxis.renderer.minGridDistance = 15\n      categoryAxis.renderer.grid.template.location = 0.5\n      categoryAxis.renderer.grid.template.strokeDasharray = '1,3'\n      categoryAxis.renderer.labels.template.rotation = -90\n      categoryAxis.renderer.labels.template.horizontalCenter = 'left'\n      categoryAxis.renderer.labels.template.location = 0.5\n      categoryAxis.renderer.inside = true\n\n      categoryAxis.renderer.labels.template.adapter.add('dx', function (dx, target) {\n        return -target.maxRight / 2\n      })\n\n      const valueAxis = chart.yAxes.push(new am4charts.ValueAxis())\n      valueAxis.tooltip.disabled = true\n      valueAxis.renderer.ticks.template.disabled = true\n      valueAxis.renderer.axisFills.template.disabled = true\n\n      const series = chart.series.push(new am4charts.ColumnSeries())\n      series.dataFields.categoryX = 'category'\n      series.dataFields.openValueY = 'open'\n      series.dataFields.valueY = 'close'\n      series.tooltipText = 'open: {openValueY.value} close: {valueY.value}'\n      series.sequencedInterpolation = true\n      series.fillOpacity = 0\n      series.strokeOpacity = 1\n      series.columns.template.width = 0.01\n      series.tooltip.pointerOrientation = 'horizontal'\n\n      const openBullet = series.bullets.create(am4charts.CircleBullet)\n      openBullet.locationY = 1\n\n      const closeBullet = series.bullets.create(am4charts.CircleBullet)\n\n      closeBullet.fill = chart.colors.getIndex(4)\n      closeBullet.stroke = closeBullet.fill\n\n      chart.cursor = new am4charts.XYCursor()\n    },\n    htMenu1 (chart) {\n      chart.colors.list = [am4core.color('#827af3')]\n      chart.data = [{\n        date: '2012-03-01',\n        price: 40\n      }, {\n        date: '2012-03-02',\n        price: 65\n      }, {\n        date: '2012-03-03',\n        price: 30\n      }, {\n        date: '2012-03-04',\n        price: 25\n      }, {\n        date: '2012-03-05',\n        price: 60\n      }, {\n        date: '2012-03-06',\n        price: 20\n      }, {\n        date: '2012-03-07',\n        price: 7\n      }, {\n        date: '2012-03-08',\n        price: 89\n      }, {\n        date: '2012-03-09',\n        price: 75\n      }, {\n        date: '2012-03-10',\n        price: 132\n      }, {\n        date: '2012-03-11',\n        price: 80\n      }, {\n        date: '2012-03-12',\n        price: 56\n      }, {\n        date: '2012-03-13',\n        price: 69\n      }, {\n        date: '2012-03-14',\n        price: 24\n      }, {\n        date: '2012-03-15',\n        price: 47\n      }]\n\n      // Create axes\n      chart.xAxes.push(new am4charts.DateAxis())\n\n      chart.yAxes.push(new am4charts.ValueAxis())\n\n      // Create series\n      const series = chart.series.push(new am4charts.LineSeries())\n      series.dataFields.valueY = 'price'\n      series.dataFields.dateX = 'date'\n      series.tensionX = 0.8\n      series.strokeWidth = 3\n    },\n    htMenu2 (chart) {\n      chart.colors.list = [am4core.color('#00d0ff')]\n      chart.data = [{\n        date: '2012-03-01',\n        price: 20\n      }, {\n        date: '2012-03-02',\n        price: 75\n      }, {\n        date: '2012-03-03',\n        price: 15\n      }, {\n        date: '2012-03-04',\n        price: 75\n      }, {\n        date: '2012-03-05',\n        price: 158\n      }, {\n        date: '2012-03-06',\n        price: 57\n      }, {\n        date: '2012-03-07',\n        price: 107\n      }, {\n        date: '2012-03-08',\n        price: 89\n      }, {\n        date: '2012-03-09',\n        price: 75\n      }, {\n        date: '2012-03-10',\n        price: 132\n      }, {\n        date: '2012-03-11',\n        price: 380\n      }, {\n        date: '2012-03-12',\n        price: 56\n      }, {\n        date: '2012-03-13',\n        price: 169\n      }, {\n        date: '2012-03-14',\n        price: 24\n      }, {\n        date: '2012-03-15',\n        price: 147\n      }]\n\n      // Create axes\n      chart.xAxes.push(new am4charts.DateAxis())\n      chart.yAxes.push(new am4charts.ValueAxis())\n\n      // Create series\n      const series = chart.series.push(new am4charts.LineSeries())\n      series.dataFields.valueY = 'price'\n      series.dataFields.dateX = 'date'\n      series.tensionX = 0.8\n      series.strokeWidth = 3\n    },\n    htMenu3 (chart) {\n      chart.colors.list = [am4core.color('#827af3')]\n      chart.hiddenState.properties.opacity = 0\n\n      chart.data = [{\n        date: '2018-01-01',\n        steps: 4561\n      }, {\n        date: '2018-01-02',\n        steps: 5687\n      }, {\n        date: '2018-01-03',\n        steps: 6348\n      }, {\n        date: '2018-01-04',\n        steps: 4878\n      }, {\n        date: '2018-01-05',\n        steps: 9867\n      }, {\n        date: '2018-01-06',\n        steps: 7561\n      }, {\n        date: '2018-01-07',\n        steps: 1287\n      }, {\n        date: '2018-01-08',\n        steps: 3298\n      }, {\n        date: '2018-01-09',\n        steps: 5697\n      }, {\n        date: '2018-01-10',\n        steps: 4878\n      }, {\n        date: '2018-01-11',\n        steps: 8788\n      }, {\n        date: '2018-01-12',\n        steps: 9560\n      }, {\n        date: '2018-01-13',\n        steps: 11687\n      }, {\n        date: '2018-01-14',\n        steps: 5878\n      }, {\n        date: '2018-01-15',\n        steps: 9789\n      }, {\n        date: '2018-01-16',\n        steps: 3987\n      }, {\n        date: '2018-01-17',\n        steps: 5898\n      }, {\n        date: '2018-01-18',\n        steps: 9878\n      }, {\n        date: '2018-01-19',\n        steps: 13687\n      }, {\n        date: '2018-01-20',\n        steps: 6789\n      }, {\n        date: '2018-01-21',\n        steps: 4531\n      }, {\n        date: '2018-01-22',\n        steps: 5856\n      }, {\n        date: '2018-01-23',\n        steps: 5737\n      }, {\n        date: '2018-01-24',\n        steps: 9987\n      }, {\n        date: '2018-01-25',\n        steps: 16457\n      }, {\n        date: '2018-01-26',\n        steps: 7878\n      }, {\n        date: '2018-01-27',\n        steps: 6845\n      }, {\n        date: '2018-01-28',\n        steps: 4659\n      }, {\n        date: '2018-01-29',\n        steps: 7892\n      }, {\n        date: '2018-01-30',\n        steps: 7362\n      }, {\n        date: '2018-01-31',\n        steps: 3268\n      }]\n\n      chart.dateFormatter.inputDateFormat = 'YYYY-MM-dd'\n      chart.zoomOutButton.disabled = true\n\n      const dateAxis = chart.xAxes.push(new am4charts.DateAxis())\n      dateAxis.renderer.grid.template.strokeOpacity = 0\n      dateAxis.renderer.minGridDistance = 10\n      dateAxis.dateFormats.setKey('day', 'd')\n      dateAxis.tooltip.hiddenState.properties.opacity = 1\n      dateAxis.tooltip.hiddenState.properties.visible = true\n\n      dateAxis.tooltip.adapter.add('x', function (x, target) {\n        return am4core.utils.spritePointToSvg({ x: chart.plotContainer.pixelX, y: 0 }, chart.plotContainer).x + chart.plotContainer.pixelWidth / 2\n      })\n\n      const valueAxis = chart.yAxes.push(new am4charts.ValueAxis())\n      valueAxis.renderer.inside = true\n      valueAxis.renderer.labels.template.fillOpacity = 0.3\n      valueAxis.renderer.grid.template.strokeOpacity = 0\n      valueAxis.min = 0\n      valueAxis.cursorTooltipEnabled = false\n\n      // goal guides\n      const axisRange = valueAxis.axisRanges.create()\n      axisRange.value = 6000\n      axisRange.grid.strokeOpacity = 0.1\n      axisRange.label.text = 'Goal'\n      axisRange.label.align = 'right'\n      axisRange.label.verticalCenter = 'bottom'\n      axisRange.label.fillOpacity = 0.8\n\n      valueAxis.renderer.gridContainer.zIndex = 1\n\n      const axisRange2 = valueAxis.axisRanges.create()\n      axisRange2.value = 12000\n      axisRange2.grid.strokeOpacity = 0.1\n      axisRange2.label.text = '2x goal'\n      axisRange2.label.align = 'right'\n      axisRange2.label.verticalCenter = 'bottom'\n      axisRange2.label.fillOpacity = 0.8\n\n      const series = chart.series.push(new am4charts.ColumnSeries())\n      series.dataFields.valueY = 'steps'\n      series.dataFields.dateX = 'date'\n      series.tooltipText = '{valueY.value}'\n      series.tooltip.pointerOrientation = 'vertical'\n      series.tooltip.hiddenState.properties.opacity = 1\n      series.tooltip.hiddenState.properties.visible = true\n      series.tooltip.adapter.add('x', function (x, target) {\n        return am4core.utils.spritePointToSvg({ x: chart.plotContainer.pixelX, y: 0 }, chart.plotContainer).x + chart.plotContainer.pixelWidth / 2\n      })\n\n      const columnTemplate = series.columns.template\n      columnTemplate.width = 30\n      columnTemplate.column.cornerRadiusTopLeft = 20\n      columnTemplate.column.cornerRadiusTopRight = 20\n      columnTemplate.strokeOpacity = 0\n\n      columnTemplate.adapter.add('fill', function (fill, target) {\n        const dataItem = target.dataItem\n        if (dataItem.valueY > 6000) {\n          return chart.colors.getIndex(0)\n        } else {\n          return am4core.color('#a8b3b7')\n        }\n      })\n\n      const cursor = new am4charts.XYCursor()\n      cursor.behavior = 'panX'\n      chart.cursor = cursor\n      cursor.lineX.disabled = true\n\n      chart.events.on('datavalidated', function () {\n        dateAxis.zoomToDates(new Date(2018, 0, 21), new Date(2018, 1, 1), false, true)\n      })\n\n      const middleLine = chart.plotContainer.createChild(am4core.Line)\n      middleLine.strokeOpacity = 1\n      middleLine.stroke = am4core.color('#000000')\n      middleLine.strokeDasharray = '2,2'\n      middleLine.align = 'center'\n      middleLine.zIndex = 1\n      middleLine.adapter.add('y2', function (y2, target) {\n        return target.parent.pixelHeight\n      })\n\n      cursor.events.on('cursorpositionchanged', updateTooltip)\n      dateAxis.events.on('datarangechanged', updateTooltip)\n\n      function updateTooltip () {\n        dateAxis.showTooltipAtPosition(0.5)\n        series.showTooltipAtPosition(0.5, 0)\n        series.tooltip.validate() // otherwise will show other columns values for a second\n      }\n\n      const label = chart.plotContainer.createChild(am4core.Label)\n      label.text = 'Pan chart to change date'\n      label.x = 90\n      label.y = 50\n    }\n  }\n}\n</script>\n","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AmChart.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AmChart.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./AmChart.vue?vue&type=template&id=26aa2b96&\"\nimport script from \"./AmChart.vue?vue&type=script&lang=js&\"\nexport * from \"./AmChart.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}